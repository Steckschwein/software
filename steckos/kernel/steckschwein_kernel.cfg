SYMBOLS
{
	#kernel start address
	__KERNEL_START__: type=export, value=$c000;
}

MEMORY
{
  ZP:         start=$00,   size=$100,       type=rw, define=no;
  ZPEXT:      start=$0280, size=$0300-$0280,        type=rw, define=no;
  
  RAM:        start=$0300, size=$700, type=rw, define=no;
  KERNEL_ROM: file="%O", start=__KERNEL_START__, size=$4000, type=ro, fill=yes, define=yes;
}

SEGMENTS
{
  ZEROPAGE:   load=ZP, type=zp, start=$e0;
  ZP_EXT:     load=ZPEXT, type=rw, optional=yes;

  BSS: load=RAM, type=bss, define=no, optional=yes;
  CODE:       load=KERNEL_ROM, type=ro; 
  RODATA:     load=KERNEL_ROM, type=ro, define=yes, align=$100;
  JUMPTABLE:  load=KERNEL_ROM, type=ro, start=$ff00, define=yes;
  VECTORS:    load=KERNEL_ROM, type=ro, start=$fffa;
}